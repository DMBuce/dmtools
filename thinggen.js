// unused maze rats tables
// * magic: omens/magical catasrophes (pg 3)
// * characters: all (pg 5, 6)
// * characters: clothing (pg 6)
// * characters: after the party (pg 6)
// * the maze: dungeon entrances (pg 10)
// * the maze: dungeon layout (pg 10)

var maintable = [
	"{{dude}}",
	//"{{mazerat_thing}}",
	"{{thing}}",
	"{{thing}}",
	"{{thing}}",
]

// THINGS
//
// [adjective] adjective|adjectnoun noun|adjectnoun [modifier]
var thing = [
	"{{any_adjective}} {{any_noun}}",
	"{{adjective}} {{any_adjective}} {{any_noun}}",
	"{{any_adjective}} {{any_noun}} {{modifier}}",
	"{{adjective}} {{any_adjective}} {{any_noun}} {{modifier}}"
]

var mazerat_thing = [
	"{{monster}}",
	//"{{character}}",
	"{{treasure}}",
]

// SPELLS
//
// effect|element form|element
var spell = [
	"{{effect}} {{form}}",
	"{{element}} {{form}}",
	"{{effect}} {{element}}",
]

var effect = [
	"{{physical_effect}}",
	"{{ethereal_effect}}",
]

var element = [
	"{{physical_element}}",
	"{{ethereal_element}}",
]

var form = [
	"{{physical_form}}",
	"{{ethereal_form}}",
]

// MONSTERS

var monster = [
	"{{element}} {{animal}}",
	"{{animal}} {{animal}}",
	"{{monster_adjective}} {{animal}}",
	"{{monster_adjective}} {{animal}}-{{animal}}",
	"{{monster_adjective}} {{monster_adjective}} {{animal}}",
	"{{animal}}-{{animal}} {{monster_modifier}}",
	"{{monster_adjective}} {{animal}} {{monster_modifier}}",
	"{{monster_adjective}} {{animal}}-{{animal}} {{monster_modifier}}",
	"{{monster_adjective}} {{monster_adjective}} {{animal}} {{monster_modifier}}",
]

var animal = [
	"{{aerial_animal}}",
	"{{terrestrial_animal}}",
	"{{aquatic_animal}}",
]

var monster_adjective = [
	"{{monster_trait}}",
	"{{monster_ability}}",
	"{{monster_personality}}",
]

var monster_modifier = [
	"{{monster_feature}}",
	"{{monster_weakness}}",
	"{{monster_tactic}}",
]

// TREASURE & EQUIPMENT

var treasure = [
	"{{mundane_treasure}}",
	"{{magic_consumable}}",
	"{{magic_consumable}}",
	"{{magic_item}}",
]

// [treasure_trait] [valuable_material] mundane_item [of book_subject]
// [treasure_trait] magical_ingredient [of book_subject]
var mundane_treasure = [
	// mundane_items
	"{{mundane_item}} of {{book_subject}}",
	"{{valuable_material}} {{mundane_item}}",
	"{{treasure_trait}} {{mundane_item}}",
	"{{treasure_trait}} {{valuable_material}} {{mundane_item}}",
	"{{treasure_trait}} {{mundane_item}} of {{book_subject}}",
	"{{valuable_material}} {{mundane_item}} of {{book_subject}}",
	"{{treasure_trait}} {{valuable_material}} {{mundane_item}} of {{book_subject}}",

	// magical_ingredients
	"{{treasure_trait}} {{magical_ingredient}} of {{book_subject}}",
	"{{treasure_trait}} {{magical_ingredient}}",
	"{{magical_ingredient}} of {{book_subject}}",
	"{{magical_ingredient}}",
]

var mundane_item = [
	"{{miscellaneous_item}}",
	"{{worn_item}}",
	"{{weapon_item}}",
	"{{literature}}",
	"{{tool_item}}",
	"{{treasure_item}}",
]

var magic_consumable = [
	"potion of healing",
	"potion of healing",
	"potion of {{potion_effect}}",
	"potion of {{potion_effect}}",
	"potion of {{spell}}",
	"potion of {{spell}}",
	"scroll of raise dead",
	"scroll of {{potion_effect}}",
	"scroll of {{spell}}",
]

var magic_item = [
	"{{magic_item_adjective}} {{magic_item_base}}",
	"{{magic_item_base}}",
]

// [treasure_trait] [valuable_material] [potion_effect|spell]
var magic_item_adjective = [
	"{{treasure_trait}}",
	"{{valuable_material}}",
	"{{treasure_trait}} {{valuable_material}}",
]

var magic_item_base = [
	"wand of {{potion_effect}}",

	"{{magic_item_noun}} of {{potion_effect}}",
	"{{magic_item_noun}} of {{spell}}",
	"{{magic_item_noun}} of {{effect}}",
	"{{ethereal_element}} {{magic_item_noun}}",
	"{{ethereal_form}} {{magic_item_noun}}",

	"{{magical_ingredient}} of {{potion_effect}}",
]

var magic_item_noun = [
	"{{worn_item}}",
	"{{worn_item}}",
	"{{weapon_item}}",
	"{{weapon_item}}",
	"{{item}}",
]

// ADJECTIVES

var physical_effect = [
	// magic: physical effects
	"animating",
	"attracting",
	"binding",
	"blossoming",
	"consuming",
	"creeping",
	"crushing",
	"diminishing",
	"dividing",
	"duplicating",
	"enveloping",
	"expanding",
	"fusing",
	"grasping",
	"hastening",
	"hindering",
	"illuminating",
	"imprisoning",
	"levitating",
	"opening",
	"petrifying",
	"phasing",
	"piercing",
	"pursuing",
	"reflecting",
	"regenerating",
	"rending",
	"repelling",
	"resurrecting",
	"screaming",
	"sealing",
	"shapeshifting",
	"shielding",
	"spawning",
	"transmuting",
	"transporting",
]

var ethereal_effect = [
	// magic: ethereal effects
	"avenging",
	"banishing",
	"bewildering",
	"blinding",
	"charming",
	"communicating",
	"compelling",
	"concealing",
	"deafening",
	"deceiving",
	"deciphering",
	"disguising",
	"dispelling",
	"emboldening",
	"encoding",
	"energizing",
	"enlightening",
	"enraging",
	"excruciating",
	"foreseeing",
	"intoxicating",
	"maddening",
	"mesmerizing",
	"mindreading",
	"nullifying",
	"paralyzing",
	"revealing",
	"revolting",
	"scrying",
	"silencing",
	"soothing",
	"summoning",
	"terrifying",
	"warding",
	"wearying",
	"withering",
]

var monster_trait = [
	// monsters: monster traits
	"amphibious",
	"bloated",
	"brittle",
	"cannibal",
	"clay-like",
	"colossal",
	"crystalline",
	"decaying",
	"{{ethereal_element}}",
	"ethereal",
	"ever-young",
	"eyeless",
	"fearless",
	"fluffy",
	"fungal",
	"gelatinous",
	"geometric",
	"hardened",
	"illusory",
	"intelligent",
	"iridescent",
	"luminous",
	"many-headed",
	"mechanical",
	"{{physical_element}}",
	"planar",
	"reflective",
	"rubbery",
	"shadowy",
	"sharp",
	"skeletal",
	"slimy",
	"sticky",
	"stinking",
	"tiny",
	"translucent",
]

var monster_ability = [
	// monsters: monster abilities
	"absorbing",
	"acid blood",
	"anti-magic",
	"blinding",
	"{{ethereal_element}}-breathing",
	"camouflaging",
	"duplicating",
	"electric",
	"entangling",
	"{{ethereal_effect}}",
	"exploding",
	"flying",
	"gaze weapon",
	"hypnotizing",
	"impervious",
	"invisible",
	"life-draining",
	"magnetic",
	"mimicking",
	"mind-reading",
	"paralyzing",
	"phasing",
	"{{physical_effect}}",
	"poisonous",
	"radioactive",
	"reflective",
	"regenerating",
	"shapeshifting",
	"spell-casting",
	"stealthy",
	"strangling",
	"super-strength",
	"telekinetic",
	"teleporting",
	"vampiric",
	"wall-crawling",
]

var monster_personality = [
	// monsters: monster personality
	"alien",
	"aloof",
	"bored",
	"cautious",
	"cowardly",
	"curious",
	"devious",
	"distractible",
	"educated",
	"embittered",
	"envious",
	"erudite",
	"fanatical",
	"forgetful",
	"generous",
	"hateful",
	"honorable",
	"humble",
	"jaded",
	"jovial",
	"legalistic",
	"manipulative",
	"megalomaniac",
	"melancholy",
	"meticulous",
	"mystical",
	"obsessive",
	"out of touch",
	"paranoid",
	"polite",
	"psychopathic",
	"sophisticated",
	"touchy",
	"unimpressed",
	"vain",
	"xenophobic",
]

var treasure_trait = [
	// treasure: treasure traits
	"altered",
	"ancient",
	"blessed",
	"bulky",
	"compact",
	"consumable",
	"culturally valuable",
	"cursed",
	"damaged",
	"disguised",
	"enemy-alerting",
	//"{{effect}}",
	//"{{element}}",
	"embellished",
	"encoded",
	"exotic",
	"extraplanar",
	"famous",
	"forbidden",
	"fragile",
	"heavy",
	"immovable",
	"impractical",
	"indestructible",
	"intelligent",
	"masterwork",
	"militarily valuable",
	"non-human",
	"owned",
	"partial",
	"politically valuable",
	"religiously valuable",
	"repaired",
	"royal",
	"toxic",
	"vile",
]

var faction_trait = [
	// the city: faction traits
	"bankrupt",
	"bureaucratic",
	"charitable",
	"confused",
	"connected",
	"corrupt",
	"decadent",
	"decaying",
	"delusional",
	"divided",
	"dwindling",
	"efficient",
	"esoteric",
	"expanding",
	"hunted",
	"incompetent",
	"incorruptible",
	"insane",
	"insular",
	"manipulative",
	"martial",
	//"{{personality}}",
	"pious",
	"popular",
	"righteous",
	"ruthless",
	"secret",
	"subversive",
	"suppressed",
	"threatened",
	"thriving",
	"unpopular",
	"up-and-coming",
	"wealthy",
	"well-prepared",
	"xenophobic",
]

var wilderness_region_trait = [
	// the wild: wilderness region traits
	"ashen",
	"blasted",
	"blighted",
	"broken",
	"consuming",
	"corrupted",
	"creeping",
	"desolate",
	//"{{dungeon trait}}",
	"eternal",
	//"{{ethereal effect}}",
	"forsaken",
	"frozen",
	"haunted",
	"howling",
	"jagged",
	"lonely",
	"misty",
	"perilous",
	"petrified",
	"phantasmal",
	"ravenous",
	"savage",
	"shadowy",
	"shifting",
	"shivering",
	"sinister",
	"sinking",
	"smoldering",
	"sweltering",
	"thorny",
	"thundering",
	"torrential",
	//"{{physical effect}}",
	"wandering",
	"withered",
]

var inn_adjective = [
	// the wild: inn adjectives
	"bellowing",
	"blazing",
	"bleak",
	"blessed",
	"bloody",
	"crimson",
	"cunning",
	"copper",
	"dancing",
	"dead",
	"drunken",
	"flying",
	"ghastly",
	"golden",
	"helpful",
	"hideous",
	"howling",
	"hungry",
	"moldy",
	"muttering",
	"nimble",
	"oozing",
	"petrified",
	"prancing",
	"romantic",
	"salty",
	"singing",
	"shivering",
	"shrieking",
	"silver",
	"smoking",
	"thirsty",
	"wicked",
	"tipsy",
	"whistling",
	"wanton",
]

var adjective = [
	"{{physical_effect}}",
	"{{ethereal_effect}}",
	"{{monster_trait}}",
	"{{monster_ability}}",
	"{{monster_personality}}",
	"{{treasure_trait}}",
	"{{faction_trait}}",
	"{{wilderness_region_trait}}",
	"{{inn_adjective}}",
]

// NOUNS

var literature = [
	// treasure: book subjects
	"alchemical recipe",
	"picture",
	"drawing",
	"astrology chart",
	"blackmail letter",
	"atlas",
	"map",
	"chart",
	"conspiracy theory",
	"cookbook",
	"recipe",
	"wanted poster",
	"divination book",
	"etiquette book",
	"fashion book",
	"family tree",
	"hagiography book",
	"page from a history book",
	"journal entry",
	"language book",
	"page from a book of laws",
	"letter",
	"writings of a lost empire",
	"writings of a lost place",
	"love poem",
	"page from a book of monsters",
	"mythology book",
	"book of odd customs",
	"book of oratory",
	"propaganda letter",
	"written prophecy",
	"siegecraft book",
	"book of songs",
	"book of state secrets",
	"sword fighting book",
	"theology book",
	"book of treasures",
	"war chronicle",
	"book of who's who",
	"witch-hunting book",
]

var item = [
	"{{miscellaneous_item}}",
	"{{worn_item}}",
	"{{weapon_item}}",
	"{{tool_item}}",
	"{{treasure_item}}",
]

var weapon_item = [
	// treasure: weapon items
	"arming sword",
	"backsword",
	"battleaxe",
	"blowpipe",
	"claymore",
	"club",
	"crossbow",
	"cutlass",
	"dagger",
	"flail",
	"flanged mace",
	"glaive",
	"halberd",
	"hammer",
	"hatchet",
	"horsebow",
	"hunting knife",
	"lance",
	"longbow",
	"longsword",
	"mace",
	"mail",
	"morningstar",
	"pike",
	"scimitar",
	"shortbow",
	"sickle",
	"sling",
	"spear",
	"staff",
	"stake",
	"stiletto",
	"throwing axe",
	"warhammer",
	"warpick",
	"whip",
]

var miscellaneous_item = [
	// treasure: miscellaneous items
	"bowl",
	"brass bell",
	"brooch",
	"carved figurine",
	"cup",
	"deck of cards",
	"drawing",
	"foreign coin",
	"game piece",
	"glass eye",
	"glass jar",
	"hair comb",
	"handkerchief",
	"hinged box",
	"hourglass",
	"human tooth",
	"hunting horn",
	"loaded dice",
	"long fork",
	"numbered key",
	"oil lamp",
	"old doll",
	"paint pot",
	"pencil",
	"purse",
	"quill pen",
	"salve",
	"scissors",
	"scroll",
	"sealed letter",
	"sewing needle",
	"shaving razor",
	"silver button",
	"skull",
	"tobacco pipe",
	"wine bottle",
]

var worn_item = [
	// treasure: worn items
	"belt",
	"blouse",
	"boots",
	"bracelet",
	"breastplate",
	"brigandine",
	"cincture",
	"cloak",
	"coat",
	"dress",
	"earing",
	"eyepatch",
	"gauntlets",
	"glove",
	"gown",
	"hat",
	"helmet",
	"hose",
	"leather armor",
	"locket",
	"mail shirt",
	"mask",
	"necklace",
	"padded armor",
	"plate mail",
	"ring",
	"robe",
	"sandals",
	"scarf",
	"shirt",
	"shoes",
	"skirt",
	"slippers",
	"socks",
	"trousers",
	"veil",
]

var tool_item = [
	// treasure: tool items
	"acid flask",
	"bear trap",
	"bellows",
	"bolt-cutters",
	"chain",
	"chisel",
	"crowbar",
	"door ram",
	"ear trumpet",
	"fire oil",
	"fishing hook",
	"goggles",
	"grappling hook",
	"grease",
	"hacksaw",
	"hammer",
	"hand drill",
	"lantern",
	"lens",
	"lock/key",
	"lockpicks",
	"manacles",
	"metal file",
	"mortar/pestle",
	"needle",
	"pickaxe",
	"pitchfork",
	"pliers",
	"pole",
	"pulleys",
	"rope",
	"scissors",
	"shovel",
	"spikes",
	"steel wire",
	"tongs",
]

var physical_form = [
	// magic: physical forms
	"altar",
	"armor",
	"arrow",
	"beast",
	"blade",
	"cauldron",
	"chain",
	"chariot",
	"claw",
	"cloak",
	"colossus",
	"crown",
	"elemental",
	"eye",
	"fountain",
	"gate",
	"golem",
	"hammer",
	"horn",
	"key",
	"mask",
	"monolith",
	"pit",
	"prison",
	"sentinel",
	"servant",
	"shield",
	"spear",
	"steed",
	"swarm",
	"tentacle",
	"throne",
	"torch",
	"trap",
	"wall",
	"web",
]

var aerial_animal = [
	// monsters: aerial animals
	"albatross",
	"bat",
	"beetle",
	"songbird",
	"butterfly",
	"condor",
	"crane",
	"crow",
	"dragonfly",
	"eagle",
	"falcon",
	"firefly",
	"flamingo",
	"fly",
	"flying squirrel",
	"goose",
	"gull",
	"hummingbird",
	"kingfisher",
	"locust",
	"magpie",
	"mantis",
	"mockingbird",
	"mosquito",
	"moth",
	"owl",
	"parrot",
	"peacock",
	"pelican",
	"pteranodon",
	"rooster",
	"sparrow",
	"swan",
	"vulture",
	"wasp",
	"woodpecker",
]

var terrestrial_animal = [
	// monsters: terrestrial animals
	"ant",
	"ape",
	"armadillo",
	"badger",
	"bear",
	"boar",
	"caterpillar",
	"centipede",
	"chameleon",
	"cockroach",
	"deer",
	"elephant",
	"ferret",
	"fox",
	"giraffe",
	"goat",
	"horse",
	"human",
	"mole",
	"ostrich",
	"ox",
	"porcupine",
	"rabbit",
	"raccoon",
	"rat",
	"rhinoceros",
	"scorpion",
	"sheep",
	"slug",
	"snail",
	"snake",
	"spider",
	"squirrel",
	"tiger",
	"wolf",
	"wolverine",
]

var aquatic_animal = [
	// monsters: aquatic animals
	"alligator",
	"amoeba",
	"anglerfish",
	"beaver",
	"clam",
	"crab",
	"dolphin",
	"eel",
	"frog",
	"hippopotamus",
	"jellyfish",
	"leech",
	"lobster",
	"manatee",
	"manta ray",
	"muskrat",
	"narwhal",
	"newt",
	"octopus",
	"otter",
	"penguin",
	"platypus",
	"pufferfish",
	"salamander",
	"sea anemone",
	"sea urchin",
	"seahorse",
	"seal",
	"shark",
	"shrimp",
	"squid",
	"swordfish",
	"tadpole",
	"turtle",
	"walrus",
	"whale",
]

var magical_ingredient = [
	// treasure: magical ingredients
	"ancient liquor",
	//"{{animal}}",
	"blind eye",
	"boiled cat",
	//"{{book}} page",
	"bottled fog",
	"coffin nail",
	"corpse's hair",
	"crossroad dust",
	"cultist entrails",
	//"{{edible plant}}",
	"exotic spice",
	"killer's hand",
	"king's tooth",
	"last breath",
	"liar's tongue",
	"lightning bolt",
	"lodestone",
	"monk's vow",
	//"{{monster feature}}",
	"newborn's cry",
	"oil portrait",
	//"{{physical element}}",
	//"{{poisonous plant}}",
	"potion of {{potion_effect}}",
	"pyre ember",
	"queen bee",
	"queen's blood",
	"ship's barnacle",
	"star-metal",
	"thief's finger",
	"tomb flower",
	//"{{valuable material}}",
	"wedding ring",
	"widow's tears",
	"wizard skull",
]

var treasure_item = [
	// treasure: treasure items
	"alchemy recipe",
	"amulet",
	"astrolabe",
	"blueprints",
	"calligraphy",
	"carpet",
	"compass",
	"contract",
	"crown",
	"crystal",
	"deed",
	"embroidery",
	"fine china",
	"fine liquor",
	"instrument",
	"magical book",
	"microscope",
	"music box",
	"orrery",
	"painting",
	"perfume",
	"prayer book",
	"printing block",
	"rare textile",
	"royal robes",
	"saint's relic",
	"scrimshaw",
	"sextant",
	"sheet music",
	"signet ring",
	"silverware",
	"spices",
	"spyglass",
	"tapestry",
	"telescope",
	"treasure map",
]

var city_theme = [
	// the city: city themes
	//"{{animal}}",
	"aristocracy",
	"art",
	"bureaucracy",
	"castes",
	"catacombs",
	//"{{city activity}}",
	//"{{city event}}",
	"crime families",
	"cruelty",
	//"{{district theme}}",
	//"{{divine domain}}",
	//"{{faction}}",
	"festivals",
	"feuds",
	"intrigue",
	//"{{low class building}}",
	"martial law",
	"meritocracy",
	//"{{npc}}",
	"opulence",
	//"{{physical element}}",
	"pilgrimages",
	"piracy",
	"plutocracy",
	"poverty",
	"rituals",
	"slavery",
	"spices",
	"theocracy",
	"thievery",
	"trade",
	"tyranny",
	//"{{upper class building}}",
	"wizardry",
	"xenophobia",
]

var city_event = [
	// the city: city events
	"assassination",
	"carnival",
	"conscription",
	"coronation",
	"coup",
	"cult activity",
	"curfew",
	"discovery",
	"earthquake",
	//"{{faction}} war",
	"fashion trend",
	"fire",
	"flood",
	"heavy fog",
	"heavy taxes",
	"holy day",
	"hysteria",
	"inquisition",
	"insurrection",
	"invasion",
	"jailbreak",
	"mass eviction",
	"mass pardon",
	"negotiations",
	"plague",
	"proclamation",
	"prohibition",
	"public games",
	"refugees",
	"rioting",
	"roundup",
	"scandal",
	"serial killer",
	"shortage",
	"tournament",
	"trial",
]

var district_theme = [
	// the city: district themes
	"catacombs",
	//"{{civilized npcs}}",
	"construction",
	"crafts",
	"criminality",
	"culture",
	"dining",
	"education",
	"entertainment",
	"finance",
	"foreigners",
	"ghettoes",
	"government",
	"graveyards",
	"green space",
	"industrialization",
	"judgement",
	"livestock",
	//"{{low class building}}",
	"marketplace",
	"memorials",
	"military",
	"opulence",
	"pollution",
	"poverty",
	"punishment",
	"religion",
	"science",
	"trade",
	"trash",
	//"{{underworld npcs}}",
	//"{{upper class building}}",
	"vices",
	//"{{wilderness npcs}}",
	"wizardry",
	"wonders",
]

var building = [
	"{{upper_class_building}}",
	"{{lower_class_building}}",
]

var upper_class_building = [
	// the city: upper class buildings
	"academy",
	"alchemist",
	"archive",
	"art dealer",
	"barber",
	"bookbinder",
	"bookseller",
	"castle",
	"clockmaker",
	"clothier",
	"courthouse",
	"furrier",
	"gallery",
	"garden",
	"haberdashery",
	"jeweler",
	"law office",
	"locksmith",
	"lounge",
	"manor",
	"museum",
	"observatory",
	"opera house",
	"park",
	"physician",
	"printer",
	"public baths",
	"restaurant",
	"salon",
	"stables",
	"taxidermist",
	"temple",
	"tobacconist",
	"townhouse",
	"winery",
	"zoo",
]

var lower_class_building = [
	// the city: lower class buildings
	"apothecary",
	"asylum",
	"baker",
	"brewery",
	"butcher",
	"candlemaker",
	"catacombs",
	"cheesemaker",
	"criminal den",
	"curiosity shop",
	"dock",
	"fighting pit",
	"forge",
	"fortuneteller",
	"gambling hall",
	"leatherworks",
	"marketplace",
	"mason",
	"mill",
	"moneylender",
	"orphanage",
	"outfitter",
	"prison",
	"sewers",
	"shipyards",
	"shrine",
	"stockyard",
	"stonecarver",
	"tattooist",
	"tavern",
	"theater",
	"veterinarian",
	"warehouse",
	"watchtower",
	"weaver",
	"workshop",
]

var building_room = [
	// the city: building rooms
	"arboretum",
	"atrium",
	"attic",
	"aviary",
	"ballroom",
	"baths",
	"bed chamber",
	"cabinet",
	"chapel",
	"cloakroom",
	"dining room",
	"dressing room",
	//"{{dungeon room}}",
	"garden",
	"garret",
	"greenhouse",
	"junk room",
	"kitchen",
	"larder",
	"library",
	"map room",
	"menagerie",
	"mews",
	"nursery",
	"pantry",
	"parlor",
	"privy",
	"root cellar",
	"saucery",
	"scullery",
	"smoking room",
	"spicery",
	"still room",
	"study",
	"trophy room",
	"wardrobe",
]

var tactical_street_feature = [
	// the city: tactical street features
	"arcade",
	"awnings",
	"balconies",
	"barricades",
	"bridge",
	"canal",
	"carriages",
	"catwalks",
	//"{{city activity}}",
	"climbable walls",
	"clotheslines",
	"crowd",
	"dead end",
	"dense fog",
	"downpour",
	//"{{dungeon activity}}",
	"flooding",
	"food stalls",
	"fountain",
	"gates",
	"ladders",
	"livestock",
	"muddy",
	"overgrown",
	"roof access",
	"roof gardens",
	"sewer access",
	"sinkhole",
	"slick",
	"steep roofs",
	"steep streets",
	"steps",
	"torn up street",
	"vermin swarms",
	"well",
	//"{{wilderness activity}}",
]

var tactical_building_feature = [
	// the city: tactical building features
	//"{{animal}} nests",
	"balconies",
	"basement access",
	"brightly lit area",
	"broken furniture",
	"broken glass",
	"cabinets",
	"carpeted floors",
	"chandeliers",
	"crawlspaces",
	"drain pipes",
	"dumbwaiters",
	"echoing marble",
	"hanging chains",
	"huge fireplace",
	"narrow ledges",
	"open windows",
	"ornate weapons",
	"overgrowth",
	"patrols",
	"piles of trash",
	"pillars",
	"rotting ceiling",
	"rotting floors",
	"rotting walls",
	"screens",
	"servant passages",
	"sewer access",
	"shadowy alcoves",
	"skylights",
	"spyholes",
	"staircases",
	"tall bookshelves",
	"unlit area",
	"watchdogs",
	"window drapes",
]

var faction = [
	// the city: factions
	"art movement",
	"beggar's guild",
	"black market",
	"brotherhood",
	"city guard",
	"conspiracy",
	"craft guild",
	"crime family",
	"crime ring",
	"dark cult",
	"explorer's club",
	"free company",
	"gourmand club",
	"heist crew",
	"heretical sect",
	"high council",
	"hired killers",
	"local militia",
	"national church",
	"noble house",
	"outlander clan",
	"outlaw gang",
	"political party",
	"religious order",
	"religious sect",
	"resistance",
	"royal army",
	"royal house",
	"scholar's circle",
	"secret society",
	"spy network",
	"street artists",
	"street gang",
	"street musicians",
	"theater troupe",
	"trade company",
]

var wilderness_region = [
	// the wild: wilderness regions
	"ashy",
	"badlands",
	"bay",
	"beach",
	"delta",
	"desert",
	"dry lands",
	"dune sea",
	"dust bowl",
	"fjords",
	"flood lands",
	"foothills",
	"forest",
	"glaciers",
	"heath",
	"highlands",
	"hills",
	"ice fields",
	"jungle",
	"lowlands",
	"mesas",
	"moor",
	"mountains",
	"petrified forest",
	"plains",
	"rainforest",
	"ricerlands",
	"salt pan",
	"savanna",
	"steppe",
	"taiga",
	"thickets",
	"tundra",
	"volvanic plain",
	"wetlands",
	"woodlands",
]

var wilderness_structure = [
	// the wild: wilderness structures
	"altar",
	"aqueduct",
	"bandit's camp",
	"battlefield",
	"bonfire",
	"bridge",
	"cairn",
	"crossroads",
	"crypt",
	"dam",
	"dungeon",
	"farm",
	"ford",
	"fortress",
	"gallows",
	"graveyard",
	"hedge",
	"hunter's camp",
	"inn",
	"lumber camp",
	"mine",
	"monastery",
	"monument",
	"orchard",
	"outpost",
	"pasture",
	"ruin",
	"seclusion",
	"shack",
	"shrine",
	"standing stone",
	"temple",
	"village",
	"wall",
	"watchtower",
	"waystone",
]

var wilderness_discovery = [
	// the wild: wilderness discoveries
	"blood stains",
	"bones",
	"broken weapons",
	"burrow",
	//"{{city acitivity}}",
	//"{{civilized npc}}",
	"cut ropes",
	"dead animal",
	//"{{dungeon activity}}",
	"food scraps",
	"grave marker",
	"human corpse",
	//"{{item}}",
	"lost {{npc}}",
	"magical effect",
	"map",
	"message",
	"migration",
	//"{{mutation}}",
	"nest",
	"portal",
	"resources",
	"rift",
	"strange plant",
	"stunned {{npc}}",
	"supplies",
	"torn flag",
	"tracks",
	"trap",
	"treasure cache",
	//"{{underworld npc}}",
	//"{{wilderness activity}}",
	//"{{wilderness landmark}}",
	//"{{wilderness structure}}",
	//"{{wilderness npc}}",
	"wizard fight",
]

var wilderness_hazard = [
	// the wild: wilderness hazards
	"avalanche",
	"blizzard",
	"brushfire",
	"bloudburst",
	"cyclone",
	"dense fog",
	"downpour",
	"drizzle",
	"dust storm",
	"earthquake",
	"eruption",
	"flooding",
	"forest fire",
	"hail",
	"heatwave",
	"hurricane",
	"ice storm",
	"light mist",
	"locust swarm",
	"magma flow",
	"meteor strike",
	"monsoon",
	"mudflow",
	"mudslide",
	"predator",
	"quicksand",
	"rain of frogs",
	"rockslide",
	"sandstorm",
	"sleet",
	"snow",
	"stampede",
	"thunderstorm",
	"tsunami",
	"whirlpool",
	"windstorm",
]

var edible_plant = [
	// the wild: edible plants
	"acorns",
	"apples",
	"asparagus",
	"blackberries",
	"blueberries",
	"carrots",
	"cattail",
	"cherries",
	"chickweed",
	"chicory",
	"clover",
	"dandelion",
	"dead-nettle",
	"elderberries",
	"fireweed",
	"gooseberries",
	"hazelnuts",
	"henbit",
	"hickory nuts",
	"honeysuckle",
	"leeks",
	"milk thistle",
	"mint",
	"mulberries",
	"mushrooms",
	"mustard",
	"onion",
	"pecans",
	"persimmons",
	"raspberries",
	"strawberries",
	"walnuts",
	"watercress",
	"wild garlic",
	"wild grapes",
	"wood sorrel",
]

var poisonous_plant = [
	// the wild: poisonous plants
	"angel's trumpet",
	"baneberry",
	"belladona",
	"black truffle",
	"bleeding heart",
	"celandine",
	"cocklebur",
	"columbine",
	"crowncup",
	"death cap",
	"dumbcane",
	"foxglove",
	"hemlock",
	"hogweed",
	"holly",
	"horse chestnut",
	"hyacinth",
	"ivy",
	"jessamine",
	"kudu",
	"larksur",
	"mandrake",
	"mangrove",
	"mistletoe",
	"moonflower",
	"nightshade",
	"oleander",
	"ragwort",
	"reindeer lichen",
	"snakeweed",
	"spinkle",
	"stinkhorn",
	"waxcap",
	"wine-cap",
	"wolfsbane",
	"wormwood",
]

var inn_noun = [
	// the wild: inn nouns
	"axe",
	"barrel",
	"bear",
	"bell",
	"boot",
	"bowl",
	"bucket",
	"candle",
	"cock",
	"cow",
	"dragon",
	"egg",
	"elephant",
	"flea",
	"fork",
	"giant",
	"griffin",
	"hart",
	"hog",
	"hound",
	"lamb",
	"lion",
	"mackerel",
	"maid",
	"monk",
	"moon",
	"pipe",
	"prince",
	"rat",
	"skull",
	"spoon",
	"star",
	"swan",
	"sword",
	"whale",
	"wife",
]

var dungeon_form = [
	// the maze: dungeon forms
	"arena",
	"asylum",
	"aviary",
	"bank",
	"baths",
	"body",
	//"{{building room}}",
	"casino",
	"catacombs",
	"cave",
	"court",
	//"{{dungeon room}}",
	"forge",
	"garden",
	"hideout",
	"hotel",
	//"{{lower class building}}",
	"laboratory",
	"library",
	"market",
	"mine",
	"monastery",
	"museum",
	"nursery",
	"orphanage",
	"palace",
	"prison",
	"sewer",
	"ship",
	"slave pit",
	"temple",
	"theater",
	//"{{upper class building}}",
	"university",
	"vault",
	"zoo",
]

var dungeon_ruination = [
	// the maze: dungeon ruinations
	"arcane disaster",
	"army invasion",
	"cannibalism",
	"civil war",
	"collapse",
	"crystal growth",
	"curse",
	"degeneration",
	"earthquake",
	"eruption",
	"evil unearthed",
	"experiments",
	"explosion",
	"famine",
	"fire",
	"flooding",
	"fungus",
	"haunting",
	"ice",
	//"{{insanity}}",
	"lava flow",
	"magical sleep",
	"melted",
	"monster attack",
	//"{{mutation}}",
	"outsider attack",
	"overgrowth",
	"petrification",
	"plague",
	"planar overlay",
	"poison gas",
	"resources gone",
	"revolt",
	"risen dead",
	"many traps",
	"war",
]

var dungeon_reward = [
	// the maze: dungeon rewards
	"ancient lore",
	"animal ally",
	"army",
	"blessing",
	"blueprints",
	"cultural artifact",
	//"{{enemy weakness}}",
	"faction ally",
	"forewarning",
	"guide",
	"holy relic",
	"influential ally",
	"instructions",
	"jewels",
	"key",
	"lost formula",
	"machine",
	"{{magic_item}}",
	"magical ally",
	"map",
	"marital ally",
	"masterpiece",
	//"{{monster}} ally",
	"oracle",
	"piles of loot",
	"planar portal",
	"prophecy",
	"renown",
	"spell",
	"transformation",
	"transport",
	//"{{treasure item}}",
	"uncovered plot",
	//"{{valuable material}}",
	"vision",
	"weapon",
]

var dungeon_room = [
	// the maze: dungeon rooms
	"armory",
	"banquet hall",
	"barracks",
	//"{{building room}}",
	"catacombs",
	"cavern",
	"chasm",
	"courtyard",
	"crypt",
	"dormitory",
	"fighting pit",
	"forge",
	"fountain",
	"gate house",
	"guard room",
	"kennel",
	//"{{lower class building}}",
	"laboratory",
	"mess hall",
	"mine shaft",
	"museum",
	"oubliette",
	"pool",
	"prison",
	"record room",
	"shrine",
	"slaughterhouse",
	"stables",
	"storeroom",
	"throne room",
	"torture room",
	"treasury",
	//"{{upper class building}}",
	"vault",
	"well",
	"workshop",
]

var dungeon_room_detail = [
	// the maze: dungeon room details
	"bas-relief",
	"blood trail",
	"bones",
	"chains",
	"chalk marks",
	"claw marks",
	"corpses",
	"crached beams",
	"crumbling walls",
	"decaying food",
	"decaying nest",
	"dropping water",
	"fading murals",
	"faint breeze",
	"faint footsteps",
	"fallen pillars",
	"fungus",
	"furniture",
	"grafitti",
	"mosaics",
	"recent repairs",
	"rotting books",
	"rubble",
	"shed skin",
	"slime trails",
	"spider webs",
	"stalactites",
	"stench",
	"smoke stains",
	"thick dust",
	"torn clothes",
	"tree roots",
	"unusual smell",
	"vibrations",
	"vines",
	"whispers",
]

var dungeon_hazard = [
	// the maze: dungeon hazards
	"acid drip",
	"bloodsuckers",
	"cave-in",
	"choking dust",
	"crude oil",
	"crystal shards",
	"deafening noise",
	"dense fog",
	"ensnaring vines",
	"fallen floor",
	"flooding",
	"freezing",
	"geysers",
	"magma",
	"magnetic field",
	"mud flow",
	"narrow ledge",
	"narrow passage",
	"poison goo",
	"poison plants",
	"precipice",
	"quicksand",
	"radiation",
	"rockslide",
	"rotten ceiling",
	"rotten floor",
	"sinkhole",
	"slippery slope",
	"spider webs",
	"spores",
	"steam vents",
	"strong winds",
	"tar pit",
	"tight passage",
	"toppling object",
	"toxic fumes",
]

var trap_effect = [
	// the maze: trap effects
	"acid pool",
	"adhesive",
	"alarm",
	"armor-melting heat",
	"bear trap",
	"blinding spray",
	"blunt pendulum",
	"boiling tar",
	"collapsing floor",
	"crocodile pit",
	"crushing walls",
	"deep pit",
	"falling cage",
	"falling ceiling",
	"fills with sand",
	"flooding",
	"giant magnet",
	"hard vacuum",
	"lava flow",
	"lightning",
	"living statues",
	"missile fire",
	"freed {{monster}}",
	"net trap",
	"pendulum blade",
	"poison gas",
	"poison needle",
	"quicksand",
	"rage gas",
	"rolling boulder",
	"room freeze trap",
	"room on fire",
	"sleeping gas",
	"spiked pit",
	"tomb-opening trap",
	"wall spikes"
]

var noun = [
	"{{weapon_item}}",
	"{{miscellaneous_item}}",
	"{{worn_item}}",
	"{{tool_item}}",
	"{{physical_form}}",
	"{{aerial_animal}}",
	"{{terrestrial_animal}}",
	"{{aquatic_animal}}",
	"{{magical_ingredient}}",
	"{{treasure_item}}",
	"{{city_theme}}",
	"{{city_event}}",
	"{{district_theme}}",
	"{{upper_class_building}}",
	"{{lower_class_building}}",
	"{{building_room}}",
	"{{tactical_street_feature}}",
	"{{tactical_building_feature}}",
	"{{faction}}",
	"{{wilderness_region}}",
	"{{wilderness_structure}}",
	"{{wilderness_discovery}}",
	"{{wilderness_hazard}}",
	"{{edible_plant}}",
	"{{poisonous_plant}}",
	"{{inn_noun}}",
	"{{dungeon_form}}",
	"{{dungeon_ruination}}",
	"{{dungeon_reward}}",
	"{{dungeon_room}}",
	"{{dungeon_room_detail}}",
	"{{dungeon_hazard}}",
	"{{trap_effect}}",
]

// ADJECTNOUNS
//
// words that can be used as either adjectives or nouns

var ethereal_element = [
	// magic: ethereal elements
	"ash",
	"chaos",
	"distortion",
	"dream",
	"dust",
	"echo",
	"ectoplasm",
	"fire",
	"fog",
	"ghost",
	"harmony",
	"heat",
	"light",
	"lightning",
	"memory",
	"mind",
	"mutation",
	"negation",
	"plague",
	"plasma",
	"probability",
	"rain",
	"rot",
	"shadow",
	"smoke",
	"snow",
	"soul",
	"star",
	"stasis",
	"steam",
	"thunder",
	"time",
	"void",
	"warp",
	"whisper",
	"wind",
]

var physical_element = [
	// magic: physical elements
	"acid",
	"amber",
	"bark",
	"blood",
	"bone",
	"brine",
	"clay",
	"crow",
	"crystal",
	"ember",
	"flesh",
	"fungus",
	"glass",
	"honey",
	"ice",
	"insect",
	"wood",
	"lava",
	"moss",
	"obsidian",
	"oil",
	"poison",
	"rat",
	"salt",
	"sand",
	"sap",
	"serpent",
	"slime",
	"stone",
	"tar",
	"thorn",
	"vine",
	"water",
	"wine",
	"wood",
	"worm",
]

var valuable_material = [
	// treasure: valuable materials
	"alabaster",
	"amber",
	"aquamarine",
	"azurite",
	"beryl",
	"black pearl",
	"bloodstone",
	"bone china",
	"chalcedony",
	"cinnabar",
	"coral",
	"diamond",
	"ebony",
	"emerald",
	"fire agate",
	"garnet",
	"gold",
	"ivory",
	"jade",
	"jasper",
	"jet",
	"lapis lazuli",
	"malachite",
	"moonstone",
	"onyx",
	"opal",
	"pearl",
	"platinum",
	"porcelain",
	"ruby",
	"sapphire",
	"serpentine",
	"silver",
	"star iron",
	"topaz",
	"turqoise",
]

var ethereal_form = [
	// magic: ethereal forms
	"aura",
	"beacon",
	"beam",
	"blast",
	"blob",
	"bolt",
	"bubble",
	"call",
	"cascade",
	"circle",
	"cloud",
	"coil",
	"cone",
	"cube",
	"dance",
	"disk",
	"field",
	"form",
	"gaze",
	"loop",
	"moment",
	"nexus",
	"portal",
	"pulse",
	"pyramid",
	"ray",
	"shard",
	"sphere",
	"spray",
	"storm",
	"swarm",
	"torrent",
	"touch",
	"vortex",
	"wave",
	"word",
]

var wilderness_landmark = [
	// the wild: wilderness landmarks
	"bog",
	"boulder field",
	"butte",
	"cave",
	"cliff",
	"crag",
	"crater",
	"creek",
	"crossing",
	"ditch",
	"field",
	"forest",
	"grove",
	"hill",
	"hollow",
	"hot springs",
	"lair",
	"lake",
	"lakebed",
	"marsh",
	"mesa",
	"moor",
	"pass",
	"pit",
	"pond",
	"rapids",
	"ravine",
	"ridge",
	"rise",
	"river",
	"rockslide",
	"spring",
	"swamp",
	"thickets",
	"valley",
	"waterfall"
]

// words that can be used as adjectives or nouns
var adjectnoun = [
	"{{ethereal_element}}",
	"{{physical_element}}",
	"{{valuable_material}}",
	"{{ethereal_form}}",
	"{{wilderness_landmark}}",
]

//  any_adjective = adjectnoun|adjective
//  any_noun      = adjectnoun|noun
var any_adjective = adjectnoun.concat(adjective);
var any_noun      = adjectnoun.concat(noun);

// MODIFIERS

var mutation = [
	// magic: mutations
	"that ages",
	"that attracts birds",
	"in child-form",
	"of corpulence",
	"covered in hair",
	"with {{animal}} arms",
	"with {{animal}} eyes",
	"with {{animal}} head",
	"with {{animal}} legs",
	"with {{animal}} mouth",
	"with {{animal}} skin",
	"in {{animal}} form",
	"the cyclops",
	"with extra arms",
	"with extra eyes",
	"with extra legs",
	"with a forked tongue",
	"of genderswap",
	"the hunchback",
	"in {{item}} form",
	"with long arms",
	"of hair loss",
	"of tooth loss",
	"with {{monster feature}}",
	"that's {{monster trait}}",
	"with no eyes",
	"with no mouth",
	"with {{physical_element}} skin",
	"with a second face",
	"that sheds skin",
	"that shrinks",
	"that shrivels",
	"with skin boils",
	"with a slime trail",
	"with translucent skin",
	"that weeps blood",
]

var insanity = [
	// magic: insanities
	"that always lies",
	"that's always polite",
	"that thinks it's in {{animal}} form",
	"that cannot count",
	"that cannot lie",
	"that's faceblind",
	"that fears birds",
	"that fears blood",
	"that fears books",
	"that fears darkness",
	"that fears fire",
	"that fears gold",
	"that fears horses",
	"that fears iron",
	"that fears music",
	"that fears own hand",
	"that fears a PC",
	"that fears rain",
	"that fears rivers",
	"that fears silence",
	"that fears sleep",
	"that fears sunlight",
	"that fears the moon",
	"that fears trees",
	"that thinks it's a genius",
	"that thinks it's gorgeous",
	"that hates violence",
	"that thinks it's invisible",
	"that thinks it's invulnerable",
	"that thinks it has {{monster_ability}}",
	"that thinks it has {{monster_feature}}",
	"that thinks it's {{monster_trait}}",
	"that must sing",
	"that has a newly {{personality}} personality",
	"that says its thoughts",
	"that sees dead people",
]

var monster_feature = [
	// monsters: monster features
	"antlers",
	"beak",
	"carapace",
	"claws",
	"compound eyes",
	"eye stalks",
	"fangs",
	"fins",
	"fur",
	"gills",
	"hooves",
	"horns",
	"no legs",
	"long tongue",
	"many eyes",
	"many limbs",
	"mucus",
	"pincers",
	"plates",
	"plumage",
	"proboscis",
	"scales",
	"segments",
	"shaggy hair",
	"shell",
	"spikes",
	"spinnerets",
	"spines",
	"stinger",
	"suction cups",
	"tail",
	"talons",
	"tentacles",
	"trunk",
	"tusks",
	"wings",
]

var monster_tactic = [
	// monsters: monster tactics
	"that ambushes",
	"that calls for support",
	"that captures",
	"that charges",
	"that climbs foes",
	"that compels to worship",
	"that creates a barrier",
	"that deceives",
	"that demands duel",
	"that disorients",
	"that encircles",
	"that evades",
	"that gangs up",
	"that gathers strength",
	"that goes berserk",
	"that harries",
	"that hurls foes",
	"that immobilizes",
	"that manipulates",
	"that mocks",
	"that monologues",
	"that orders its minions",
	"that protects its leader",
	"that protects itself",
	"that scatters foes",
	"that stalks",
	"that steals",
	"that swarms",
	"that targets the insolent",
	"that targets the leader",
	"that targets the nearest",
	"that targets the richest",
	"that targets the strongest",
	"that targets the weakest",
	"that toys with its foes",
	"that uses terrain",
]

var monster_weakness = [
	// monsters: monster weakness
	"with a weakness to bells",
	"with a weakness to birdsong",
	"with a weakness to children",
	"with a weakness to cold",
	"with a weakness to cold iron",
	"with a weakness to competition",
	"with a weakness to conversation",
	"with a weakness to deformity",
	"with a weakness to flattery",
	"with a weakness to flowers",
	"with a weakness to gifts",
	"with a weakness to gold",
	"with a weakness to heat",
	"with a weakness to a holy icon",
	"with a weakness to holy water",
	"with a weakness to home cooking",
	"that {{insanity}}",
	"with a weakness to mirrors",
	"with a weakness to mistletoe",
	"with a weakness to moonlight",
	"with a weakness to music",
	"with a weakness to {{method}}",
	"with a weakness to phylactery",
	"with a weakness to {{physical_element}}",
	"with a weakness to puzzles",
	"with a weakness to riddles",
	"with a weakness to rituals",
	"with a weakness to silver",
	"with a weakness to sunlight",
	"with a weakness to tears",
	"with a weakness to true name",
	"with a weakness to {{valuable_material}}",
	"with a weak spot",
	"with a {{weapon_item}} weakness",
	"with a weakness to wine",
	"with a weakness to wormwood",
]

var book_subject = [
	// treasure: book subjects
	"alchemy",
	"art",
	"astrology",
	"blackmail",
	"charts & maps",
	"conspiracies",
	"cookbook",
	"criminals",
	"divination",
	"etiquette",
	"fashion",
	"genealogy",
	"hagiography",
	"history",
	"journal",
	"language",
	"laws",
	"letters",
	"lost empires",
	"lost places",
	"love poems",
	"monsters",
	"mythology",
	"odd customs",
	"oratory",
	"propaganda",
	"prophecies",
	"siegecraft",
	"songs",
	"state secrets",
	"sword fighting",
	"theology",
	"treasures",
	"war chronicle",
	"who's who",
	"witch-hunting",
]

var rare_potion_effect = [
	// magic: insanities
	"lying",
	"politeness",
	"delusional {{animal}}-form",
	//"cannot count",
	"truth",
	"face-blindness",
	"bird-fearing",
	"blood-fearing",
	"book-fearing",
	"darkness-fearing",
	"fire-fearing",
	"gold-fearing",
	"horse-fearing",
	"iron-fearing",
	"music-fearing",
	//"own hand-fearing",
	//"a PC-fearing",
	"rain-fearing",
	"river-fearing",
	"silence-fearing",
	"sleep-fearing",
	"sunlight-fearing",
	"moon-fearing",
	"tree-fearing",
	"delusional genius",
	"delusional gorgeousness",
	"violence-fearing",
	"delusional invisibility",
	"delusional invulnerability",
	"delusional {{monster_ability}}",
	"delusional {{monster_feature}}",
	"{{monster_trait}} delusions",
	"singing",
	"hopeless {{personality}}",
	"thought-saying",
	"dead-seeing",
	// magic: mutations
	"aging",
	"birdcalling",
	"child-form",
	"corpulence",
	"hairiness",
	"{{animal}} arms",
	"{{animal}} eyes",
	"{{animal}} head",
	"{{animal}} legs",
	"{{animal}} mouth",
	"{{animal}} skin",
	"cyclops",
	"extra arms",
	"extra eyes",
	"extra legs",
	"fork-tongue",
	"genderswap",
	"hunchback",
	"long arms",
	"hair loss",
	"tooth loss",
	"eyelessness",
	"mouthlessness",
	"{{physical_element}}-skin",
	"second face",
	"skin-shedding",
	"shrinking",
	"shriveling",
	"skin boils",
	"slime trail",
	"translucent skin",
	"blood-weeping",
]

var potion_effect = [
	// treasure: potions
	"{{animal}}-form",
	"body swap",
	"camouflage",
	"control animals",
	"control {{element}}",
	"cure affliction",
	"detect evil",
	"detect gold",
	"detect hidden",
	"direction sense",
	"{{element}}-form",
	"{{element}}-skin",
	"the extra arm",
	"flight",
	"ghost-speech",
	"heat vision",
	//"{{insanity}}",
	"{{rare_potion_effect}}",
	"invulnerability",
	"{{item}}-form",
	"magic immunity",
	"mirror image",
	"{{monster_ability}}",
	"{{monster_feature}}",
	"{{monster_trait}}",
	//"{{mutation}}",
	"{{rare_potion_effect}}",
	"night vision",
	"{{spell}}",
	"healing",
	"speed",
	"stretchy",
	"super-jump",
	"super-strength",
	"telekinesis",
	"tongues",
	"water-breathing",
	"water-walking",
]

var city_activity = [
	// the city: city activities
	"that abducts",
	"that begs",
	"that brawls",
	"that burgles",
	"that celebrates",
	"that chases",
	"that constructs",
	"that cooks",
	"that dances",
	"that duels",
	//"{{dungeon activity}}",
	"that executes",
	"that extinguishes",
	"that extorts",
	"that follows",
	"that gambles",
	"that hauls",
	"that interrogates",
	"that marries",
	//"{{mission}}",
	"that mourns",
	"that parties",
	"that patrols",
	"that performs",
	"that plays",
	"that preaches",
	"that processes",
	"that proclaims",
	"that protests",
	"that releases",
	"that repairs",
	"that riots",
	"that robs",
	"that searches",
	"that sells",
	//"{{wilderness activity}}",
]

var faction_goal = [
	// the city: faction goals
	"wants to advise leader",
	"wants to avoid detection",
	"wants to awaken being",
	"wants to collect artifacts",
	"wants to construct base",
	"wants to control {{faction}}",
	"wants to control politics",
	"wants to create artifact",
	"wants to create monster",
	"wants to defeat {{faction}}",
	"wants to defend borders",
	"wants to defend leader",
	"wants to destroy artifacts",
	"wants to destroy being",
	"wants to destroy villain",
	"wants to enforce law",
	"wants to enrich members",
	"wants to entertain",
	"wants to exchange goods",
	"wants to hear rumors",
	"wants to indulge tastes",
	"wants to infiltrate {{faction}}",
	"wants to map the wild",
	"wants to overthrow order",
	"wants to preserve lineage",
	"wants to preserve lore",
	"wants to produce goods",
	"wants to promote arts",
	"wants to promote craft",
	"wants to purge traitors",
	"wants to sell services",
	"wants to share knowledge",
	"wants to spread beliefs",
	"wants to sumon evil",
	"wants to survive",
	"wants to transport goods",
]

var wilderness_activity = [
	// wilderness: wilderness activities
	"that ambushes",
	"that argues",
	"that births",
	"that builds",
	"that buries",
	"that captures",
	//"{{city activity}}",
	"that convenes",
	"that demolishes",
	"that dies",
	"that duels",
	//"{{dungeon activity}}",
	"that eats",
	"that excavates",
	"that feasts",
	"that fells",
	"that fishes",
	"that flees",
	"that forages",
	"that hunts",
	"that marches",
	"that raids",
	"that rescues",
	"that rests",
	"that sacrifices",
	"that scouts",
	"that sings",
	"that skins",
	"that skirmishes",
	"that slays",
	"that sleeps",
	"that swims",
	"that tracks",
	"that traps",
	"that wanders",
	"that worships",
]

var inn_quirk = [
	// the wild: inn quirks
	"that's from 100 years in the past",
	"that's always night",
	"with animal fights",
	"with bard duels",
	"that's bigger on the inside",
	"with a black market",
	"that's brand new",
	"with cannibals",
	//"{{city activity}}",
	"with a constant party",
	"with a dancing contest",
	"that's a dead drop",
	//"{{dungeon form}}",
	"that's expensive",
	"that's a {{faction}} hangout",
	//"{{faction traits}}",
	"with a famous chef",
	"with fey patrons",
	"that's a fight club",
	"five floors tall",
	"with ghost staff",
	"that's haunted",
	"that's a hideout",
	"that's an inn/{{building}}",
	"with a magic sword",
	"that magically moves",
	"with mercenaries for hire",
	"that's a {{secret}} hangout",
	"with preaching",
	"that has secure storage",
	"with staff that are kids",
	"with a talking painting",
	"that's underground",
	"with a VIP lounge",
	"with a voice in a well",
	"for women only",
]

var dungeon_activity = [
	// the maze: dungeon activities
	"that besieges",
	"that captures",
	//"{{city activity}}",
	"that collects",
	"that constructs",
	"that controls",
	"that delivers",
	"that demolishes",
	"that escapes",
	"that feeds",
	"that fortifies",
	"that guards",
	"that hides",
	"that hunts",
	"that loots",
	"that maps",
	"that mines",
	//"{{monster tactic}}",
	"that negotiates",
	"that patrols",
	"that performs ritual",
	"that purges",
	"that questions",
	"that raids",
	"that repairs",
	"that rescues",
	"that researches",
	"that revives",
	"that riddles",
	"that scavenges",
	"that seizes",
	"that tunnels",
	"that unearths",
	"that vandalizes",
	//"{{wilderness activity}}",
	"that worships",
]

var dungeon_trick = [
	// the maze: dungeon tricks
	"of absorption",
	"of activation",
	"of animation",
	"of blessings",
	"of communication",
	"of confusion",
	"of consumption",
	"of creation",
	"of curses",
	"of deception",
	"of duplication",
	//"{{ethereal effect}}",
	"of exchange",
	"of imprisonment",
	"of instructions",
	"of interrogation",
	"of mind-control",
	//"{{mission}}",
	"of mood-alteration",
	"of nullification",
	//"{{physical effect}}",
	"of planeshift",
	"of protection",
	"of rejuvenation",
	"of release",
	"of reversal",
	"of rotation",
	"of scrying",
	"of size-alteration",
	"of summoning",
	"of theft",
	"of time-alteration",
	"of transformation",
	"of transmutation",
	"of transportation",
	"of wonder",
]

var trap_trigger = [
	// the maze: trap triggers
	"activated by blowing",
	"activated by breaking",
	"activated by burning",
	"activated by a choice",
	"activated by a countdown",
	"activated by darkness",
	"activated by draining",
	"activated by eating",
	"activated by inserting",
	"activated by killing",
	"activated by knocking",
	"activated by light",
	"activated by magic",
	"activated by melody",
	"activated by noise",
	"activated by opening",
	"activated by a phrase",
	"activated by pouring",
	"activated by pressing",
	"activated by proximity",
	"activated by pulling",
	"activated by reading",
	"activated by reflection",
	"activated by releasing",
	"activated by removing",
	"activated by retrieving",
	"activated by rudeness",
	"activated by shutting",
	"activated by sitting",
	"activated by sleeping",
	"activated by sliding",
	"activated by touching",
	"activated by turning",
	"activated by unbalancing",
	"activated by unearthing",
	"activated by writing"
]

var modifier = [
	"{{mutation}}",
	"that {{insanity}}",
	"with {{monster_feature}}",
	"{{monster_tactic}}",
	"{{monster_weakness}}",
	"of {{book_subject}}",
	"of {{potion_effect}}",
	"{{city_activity}}",
	"{{faction_goal}}",
	"{{wilderness_activity}}",
	"{{inn_quirk}}",
	"{{dungeon_activity}}",
	"{{dungeon_trick}}",
	"{{trap_trigger}}",
]

//// NPCS

// [dude_adjective] dude_first_name dude_last_name [dude_modifier|the dude_adjective]
// [dude_adjective] dude_first_name|dude_last_name [the dude_adjective]
var dude = [
	"{{dude_adjective}} {{npc_firstname}} {{npc_lastname}} {{dude_modifier}}",
	"{{npc_firstname}} {{npc_lastname}} {{dude_modifier}}",
	"{{dude_adjective}} {{npc_firstname}} {{npc_lastname}}",
	"{{npc_firstname}} {{npc_lastname}} the {{dude_adjective}}",

	"{{dude_adjective}} {{npc_firstname}} {{dude_modifier}}",
	"{{dude_adjective}} {{npc_lastname}} {{dude_modifier}}",
	"{{npc_firstname}} the {{dude_adjective}}",
	"{{npc_lastname}} the {{dude_adjective}}",
	"{{dude_adjective}} {{npc_firstname}}",
	"{{dude_adjective}} {{npc_lastname}}",
]

// same as dude but without '{{dude_modifier}}' and with '{{npc_title}}' instead of 'the {{dude_adjective}}'
var npc = [
	"{{dude_adjective}} {{npc_firstname}} {{npc_lastname}}",
	"{{npc_firstname}} {{npc_lastname}} {{npc_title}}",

	"{{npc_firstname}} {{npc_title}}",
	"{{npc_lastname}} {{npc_title}}",
	"{{dude_adjective}} {{npc_firstname}}",
	"{{dude_adjective}} {{npc_lastname}}",
]

var npc_title = [
	"the {{appearance}}",
	"the {{misfortune}}",
	"the {{personality}}",
	"the {{secret}}",
	"the {{reputation}}",
	"the {{hobby}}",
	"the {{relationship}}",
	"{{civilized_npc}}",
	"{{underworld_npc}}",
	"{{wilderness_npc}}",
	"{{mannerism}}",
	"{{divine_domain}}",
]

var npc_firstname = [
	"{{male_name}}",
	"{{female_name}}",
]

var npc_lastname = [
	"{{npc_firstname}}",
	"{{upper_class_surname}}",
	"{{lower_class_surname}}",
]

//// dude first names

var female_name = [
	// characters: female names
	"Adelaide",
	"Alma",
	"Barsaba",
	"Beatrix",
	"Bianca",
	"Cleopha",
	"Clover",
	"Constance",
	"Damaris",
	"Daphne",
	"Demona",
	"Elsbeth",
	"Esme",
	"Fern",
	"Hester",
	"Hippolyta",
	"Jessamine",
	"Jilly",
	"Morgot",
	"Minerva",
	"Nerissa",
	"Odette",
	"Olga",
	"Orchid",
	"Pepper",
	"Phoebe",
	"Piety",
	"Poppy",
	"Silence",
	"Sybil",
	"Trillby",
	"Tuesday",
	"Ursula",
	"Vivian",
	"Wendy",
	"Zora",
]

var male_name = [
	// characters: male names
	"Balthazar",
	"Basil",
	"Bertram",
	"Blazton",
	"Chadwick",
	"Clovis",
	"Destrian",
	"Ellis",
	"Erasmus",
	"Faustus",
	"Finn",
	"Fitzbugh",
	"Florian",
	"Fox",
	"Godwin",
	"Hannibal",
	"Fasper",
	"Jiles",
	"Jules",
	"Lepold",
	"Merrick",
	"Mortimer",
	"Ogden",
	"Orion",
	"Oswald",
	"Percival",
	"Peregrine",
	"Quentin",
	"Redmaine",
	"Reinhold",
	"Silas",
	"Stilton",
	"Stratford",
	"Tenpiece",
	"Waverly",
	"Webster",
]

//// dude last names

var upper_class_surname = [
	// characters: upper class surnames
	"Belvedere",
	"Bithesea",
	"Calaver",
	"Carvolo",
	"De Rippe",
	"Droll",
	"Dunlow",
	"Edevane",
	"Erelong",
	"Febland",
	"Fernsby",
	"Fisk",
	"Gastrell",
	"Girdwood",
	"Gorgon",
	"Grimeson",
	"Gruger",
	"Hitheryon",
	"La Marque",
	"Malmora",
	"Miter",
	"Oblington",
	"Onymous",
	"Phillifent",
	"Portendorfer",
	"Romatet",
	"Rothery",
	"Skorbeck",
	"Slora",
	"Southwark",
	"Stavish",
	"Vandermeer",
	"Wellbelove",
	"Westergren",
	"Wexley",
	"Wilberforce",
]

var lower_class_surname = [
	// characters: lower class surnames
	"Barrow",
	"Beetleman",
	"Berrycloth",
	"Birdwhistle",
	"Bobich",
	"Chips",
	"Coffin",
	"Crimpling",
	"Culpepper",
	"Dankworth",
	"Digworthy",
	"Dreggs",
	"Gimble",
	"Graveworm",
	"Greelish",
	"Hardwick",
	"Hatman",
	"Hovel",
	"Knibbs",
	"Midnighter",
	"Needle",
	"Nethercoat",
	"Pestle",
	"Relish",
	"Rumbold",
	"Rummage",
	"Sallow",
	"Saltmarsh",
	"Silverless",
	"Skitter",
	"Slee",
	"Slitherly",
	"Stoker",
	"Tarwater",
	"Tumbler",
	"Villin",
]

//// dude adjectives
var appearance = [
	// characters: appearances
	"aquiline",
	"athletic",
	"barrel-chested",
	"boney",
	"brawny",
	"brutish",
	"bullnecked",
	"chiseled",
	"coltish",
	"corpulent",
	"craggy",
	"delicate",
	"furrowed",
	"gaunt",
	"gorgeous",
	"grizzled",
	"haggard",
	"handsome",
	"hideous",
	"lanky",
	"pudgy",
	"ripped",
	"rosy",
	"scrawny",
	"sinewy",
	"slender",
	"slumped",
	"solid",
	"square-jawed",
	"statuesque",
	"towering",
	"trim",
	"weathered",
	"willowy",
	"wiry",
	"wrinkled",
]

var misfortune = [
	// characters: misfortunes
	"abandoned",
	"addicted",
	"arrested",
	"blackmailed",
	"burgled",
	"challenged",
	"condemned",
	"crippled",
	"cursed",
	"defauded",
	"demoted",
	"depressed",
	"discredited",
	"dismissed",
	"disowned",
	"exiled",
	"famished",
	"forgotten",
	"framed",
	"haunted",
	"humiliated",
	"impoverished",
	"kidnapped",
	"lost",
	"mobbed",
	"mutilated",
	"overworked",
	"poisoned",
	"pursued",
	"rejected",
	"replaced",
	"robbed",
	"sick",
	"sued",
	"suspected",
	"transformed",
]

var personality = [
	// characters: personalities
	"bitter",
	"brave",
	"cautious",
	"chipper",
	"contrary",
	"cowardly",
	"cunning",
	"driven",
	"entitled",
	"gregarious",
	"grumpy",
	"heartless",
	"honor-bound",
	"hotheaded",
	"inquisitive",
	"irascible",
	"jolly",
	"know-it-all",
	"lazy",
	"loyal",
	"menacing",
	"mopey",
	"nervous",
	"protective",
	"righteous",
	"rude",
	"sarcastic",
	"savage",
	"scheming",
	"serene",
	"spacey",
	"stoic",
	"stubborn",
	"stuck-up",
	"suspicious",
	"wisecracking",
]

var secret = [
	// characters: secrets
	"addicted",
	"artificial",
	"assassin",
	"bankrupt",
	"beholden",
	"counterspy",
	"cultist",
	"demigod",
	"evil blooded",
	"exiled",
	"fencing",
	"fugitive",
	"ghost",
	"child-having",
	"heretic",
	"highborn",
	"rich",
	"illusionary",
	"insurrectionist",
	"lowborn",
	"married",
	"mind-controlled",
	"monster hunter",
	"non-human",
	"polygamist",
	"relic-protector",
	"bastard",
	"secret policeman",
	"serial killer",
	"smuggler",
	"spying",
	"time traveling",
	"transformed",
	"war criminal",
]

var reputation = [
	// characters: reputations
	"ambitious",
	"authoritative",
	"boorish",
	"borrower",
	"celebrity",
	"charitable",
	"cheater",
	"dangerous",
	"entertainer",
	"gossip",
	"hardworking",
	"holy",
	"honest",
	"hypochondriac",
	"idiot",
	"influential",
	"layabout",
	"leader",
	"misanthrope",
	"miser",
	"neighborly",
	"nutjob",
	"obnoxious",
	"overreducated",
	"party",
	"pious",
	"proper",
	"doom-prophet",
	"repulsive",
	"respected",
	"riffraff",
	"scandalous",
	"slimeball",
	"terrifying",
	"weirdo",
	"wise",
]

var hobby = [
	// characters: hobbies
	"archaeology-loving",
	"art collecting",
	"bad-fiction-writing",
	"calligrapher",
	"card gamer",
	"clockworker",
	"cat collector",
	"chef",
	"dark loremaster",
	"dogbreeder",
	"embroidery",
	"exercise",
	"falconry",
	"fashion",
	"fisher",
	"foreigner-loving",
	"gardner",
	"history buff",
	"horseracing",
	"hunter",
	"instrument-playing",
	"knitting",
	"lawn gamer",
	"mountaineering",
	"opera singer",
	"painter",
	"poet",
	"puzzle-solving",
	"riddler",
	"science",
	"sculptor",
	"sketching",
	"smoking",
	"theatrical",
	"weaving",
	"whiskey-drinker",
]

var relationship = [
	// characters: relationships
	"adviser",
	"blackmailer",
	"business partner",
	"business rival",
	"buyer",
	"captor",
	"client",
	"confidant",
	"debtor",
	"disciple",
	"guardian",
	"henchman",
	"idol",
	"informant",
	"master",
	"mentor",
	"nemesis",
	"offspring",
	"parent",
	"patron",
	"political rival",
	"prisoner",
	"protege",
	"quarry",
	"right hand",
	"romantic rival",
	"servant",
	"sibling",
	"social rival",
	"spouse",
	"stalker",
	"suitor",
	"supplicant",
	"supplier",
	"sweetheart",
	"unrequited lover",
]

var dude_adjective = [
	"{{appearance}}",
	"{{misfortune}}",
	"{{personality}}",
	"{{secret}}",
	"{{reputation}}",
	"{{hobby}}",
	"{{relationship}}",
]

//// NPC MODIFIERS

var civilized_npc = [
	// characters: civilized dudes
	"the acolyte",
	"the actor",
	"the apothecary",
	"the baker",
	"the barber",
	"the blacksmith",
	"the brewer",
	"the bureaucrat",
	"the butcher",
	"the carpenter",
	"the clockmaker",
	"the courier",
	"the courtier",
	"the diplomat",
	"the fishmonger",
	"the guard",
	"the haberdasher",
	"the innkeeper",
	"the {{item}}-seller",
	"the jeweler",
	"the knight",
	"the locksmith",
	"the mason",
	"the miller",
	"the musician",
	"the noble",
	"the painter",
	"the priest",
	"the scholar",
	"the scribe",
	"the sculptor",
	"the shipwright",
	"the soldier",
	"the tailor",
	"the taxidermist",
	"the wingmaker",
]

var underworld_npc = [
	// characters: underworld dudes
	"the alchemist",
	"the beggar-prince",
	"the blackmailer",
	"the bounty-hunter",
	"the chimney sweep",
	"the coin-clipper",
	"the contortionist",
	"the counterfeiter",
	"the cultist",
	"the cutpurse",
	"the debt-collector",
	"the deserter",
	"the fencer",
	"the fortuneteller",
	"the galley slave",
	"the gambler",
	"the gravedigger",
	"the headsman",
	"the hedge knight",
	"the highwayman",
	"the housebreaker",
	"the kidnapper",
	"the mad prophet",
	"the mountebank",
	"the peddler",
	"the pit-fighter",
	"the poisoner",
	"the rat-catcher",
	"the scrivener",
	"the sellsword",
	"the slave",
	"the smuggler",
	"the street performer",
	"the tattooist",
	"the urchin",
	"the usurer",
]

var wilderness_npc = [
	// characters: wilderness dudes
	"the apiarist",
	"the bandit",
	"the caravan guard",
	"the caravaneer",
	"the druid",
	"the exile",
	"the explorer",
	"the farmer",
	"the fisherman",
	"the forager",
	"the fugitive",
	"the hedge wizard",
	"the hermit",
	"the hunter",
	"the messenger",
	"the minstrel",
	"the monk",
	"the monster hunter",
	"the outlander",
	"the tinker",
	"the pilgrim",
	"the pacher",
	"the raider",
	"the ranger",
	"the sage",
	"the scavenger",
	"the scout",
	"the shepherd",
	"the seer",
	"the surveyor",
	"the tinker",
	"the tomb raider",
	"the trader",
	"the trapper",
	"the witch",
	"the woodcutter",
]

var asset = [
	// characters: assets
	"the authority",
	"who avoids detection",
	"who calls in favors",
	"the charming",
	"who cooks the books",
	"who erases evidence",
	"the excellent liar",
	"the extremely rich",
	"the {{faction}}-leader",
	"the {{faction}}-member",
	"the feared",
	"of the fortified base",
	"the gorgeous",
	"who hears rumors",
	"of the huge family",
	"of the huge library",
	"the impersonator",
	"the interrogator",
	"who knows a guy",
	"who knows a way in",
	"who launders money",
	"the lerned",
	"the local celebrity",
	"who has local knowledge",
	"who has loyal henchmen",
	"who has a middling oracle",
	"who has nothing to lose",
	"who owns the guards",
	"who has a powerful spouse",
	"who procures gear",
	"who pulls the strings",
	"of the secret lab",
	"who sells contraband",
	"who smuggles goods",
	"of the spy network",
	"the war hero",
]

var liability = [
	// characters: liabilities
	"the addict",
	"the alcoholic",
	"who has a corrupt ally",
	"the coward",
	"the decadent",
	"who has forbidden love",
	"the gambler",
	"the glutton",
	"the greedy",
	"the heretic",
	"who has huge debts",
	"the imposter",
	"who {{insanity}}",
	"the jealous",
	"who leaves evidence",
	"who has many enemies",
	"the misinformed",
	"who has a money trail",
	"the narcissist",
	"who needs medicine",
	"the OCD",
	"the paranoid",
	"the partyer",
	"who has poor equipment",
	"the protective",
	"the scandalous",
	"the softhearted",
	"of strict routines",
	"the superstitious",
	"the suspicious",
	"of the temper",
	"the trusting",
	"of the vulnerable base",
	"the wanted",
	"the weak-willed",
	"the widely despised",
]

var npc_goal = [
	// characters: dude goals
	"who wants a better life",
	"who wants acceptance",
	"who wants to acquire {{magic_item}}",
	"who wants to craft {{item}",
	"who wants to destroy {{faction}}",
	"who wants to destroy {{magic_item}}",
	"who wants enlightenment",
	"who wants fame",
	"who wants to found {{faction}}",
	"who wants freedom",
	"who wants glory",
	"who wants to impress {{dude}}",
	"who wants infamy",
	"who wants to infiltrate {{faction}}",
	"who wants justice",
	"who wants to kidnap {{dude}}",
	"who wants to lead {{faction}}",
	"who wants learning",
	"who wants to locate {{dude}}",
	"who wants love",
	"who wants mastery",
	"who wants power",
	"who wants to reach location",
	"who wants to rescue {{dude}}",
	"who wants to resolve dispute",
	"who wants to restore {{faction}}",
	"who wants to reveal a secret",
	"who wants revence",
	"who wants to sabotage {{faction}}",
	"who wants to serve a deity",
	"who wants to serve evil",
	"who wants to serve {{faction}}",
	"who wants to serve ideology",
	"who wants to serve leader",
	"who wants to serve the needy",
	"who wants wealth",
]

var mission = [
	// characters: missions
	"tries to apprehend",
	"tries to assassinate",
	"tries to blackmail",
	"tries to burgle",
	"tries to chart",
	"tries to convince",
	"tries to deface",
	"tries to defraud",
	"tries to deliver",
	"tries to destroy",
	"tries to discredit",
	"tries to escort",
	"tries to exfiltrate",
	"tries to extort",
	"tries to follow",
	"tries to frame",
	"tries to impersonate",
	"tries to impress",
	"tries to infiltrate",
	"tries to interrogate",
	"tries to investigate",
	"tries to kidnap",
	"tries to locate",
	"tries to plant",
	"tries to protect",
	"tries to raid",
	"tries to replace",
	"tries to retrieve",
	"tries to rob",
	"tries to ruin",
	"tries to sabotage",
	"tries to smuggle",
	"tries to surveil",
	"tries to take over",
	"tries to terrorize",
	"tries to threaton",
]

var method = [
	// characters: methods
	"alchemy",
	"blackmail",
	"bluster",
	"bribery",
	"bullying",
	"bureaucracy",
	"charm",
	"commerce",
	"cronies",
	"debate",
	"deceit",
	"deduction",
	"eloquence",
	"espionage",
	"fast talking",
	"favors",
	"hard work",
	"humor",
	"investigation",
	"legal maneuvers",
	"manipulation",
	"misdirection",
	"money",
	"nagging",
	"negotiation",
	"persistence",
	"piety",
	"preparation",
	"quick wit",
	"research",
	"rumors",
	"sabotage",
	"teamwork",
	"theft",
	"threats",
	"violence",
]

var physical_detail = [
	// characters: physical details
	"has acid scars",
	"has battle scars",
	"has birthmark",
	"has braided hair",
	"has brand mark",
	"has broken nose",
	"the bronze skinned",
	"has burn scars",
	"has bushy eyebrows",
	"has curly hair",
	"the dark skinned",
	"has dreadlocks",
	"has exotic accent",
	"has flogging scars",
	"has freckles",
	"has gold tooth",
	"has hoarse voice",
	"has huge beard",
	"has long hair",
	"has matted hair",
	"has missing ear",
	"has missing teeth",
	"has mustache",
	"has muttonchops",
	"has nine fingers",
	"has oiled hair",
	"the one-eyed",
	"the pale skinned",
	"has piercings",
	"has ritual cars",
	"has sallow skin",
	"has shaved head",
	"the sunburned",
	"has tangled hair",
	"has tattoos",
	"has topknot",
]

var mannerism = [
	// characters: mannerisms
	"of the anecdotes",
	"the breathy",
	"who chuckles",
	"the clipped",
	"the cryptic",
	"of the deep voice",
	"of the drawl",
	"who enunciates",
	"of the flowery speech",
	"of the gravelly voice",
	"the highly formal",
	"the hypnotic",
	"who interrupts",
	"the laconic",
	"who laughs",
	"of the long pauses",
	"the melodious",
	"the monotone",
	"who mumbles",
	"who narrates",
	"the overly casual",
	"of the quaint sayings",
	"who rambles",
	"of the random facts",
	"the rapid-fire",
	"the rhyming",
	"the robotic",
	"of the slow speech",
	"who speechifies",
	"the squeaky",
	"of the street slang",
	"who stutters",
	"who talks to him/herself",
	"who trails off",
	"the very loud",
	"who whispers",
]

var divine_domain = [
	// characters: divine domains
	"of the {{animal}} god",
	"of the god of balance",
	"of the god of betrayal",
	"of the god of chance",
	"of the god of chaos",
	"of the god of conquest",
	"of the god of cycles",
	"of the god of death",
	"of the god of destiny",
	"of the god of dreams",
	"of the god of {{element}}",
	"of the god of gateways",
	"of the god of judgement",
	"of the god of love",
	"of the god of memory",
	"of the god of monsters",
	"of the god of moon",
	"of the god of motherhood",
	//"of the god of {{dude}}",
	"of the god of oaths",
	"of the god of order",
	"of the god of plague",
	"of the god of purification",
	"of the god of reason",
	"of the god of schemes",
	"of the god of secrets",
	"of the god of storms",
	"of the god of summer",
	"of the god of sun",
	"of the god of the forge",
	"of the god of the sea",
	"of the god of the wild",
	"of the god of time",
	"of the god of underworld",
	"of the god of wealth",
	"of the god of winter",
]

var dude_modifier = [
	"{{civilized_npc}}",
	"{{underworld_npc}}",
	"{{wilderness_npc}}",
	"{{asset}}",
	"{{liability}}",
	"{{npc_goal}}",
	"{{mission}}",
	"uses {{method}}",
	"{{physical_detail}}",
	"{{mannerism}}",
	"{{divine_domain}}",
]

/**
 * Returns a random integer between min (inclusive) and max (inclusive)
 * Using Math.round() will give you a non-uniform distribution!
 */
function randomint(min, max) {
	return Math.floor(Math.random() * (max - min + 1)) + min;
}

function randomitem(list) {
	return list[Math.floor(Math.random()*list.length)];
}

function expand(string, i) {

	// check for infinite recursion
	var message = i + ": " + string;
	if (i>100) {
		console.log(message);
		console.error("Too many table indirections");
		return string;
	}

	var retval = string;
	var regex = /{{([a-zA-Z0-9_]*)}}/g;
	var matches = null;
	var replacements = "";

	// loop through regex matches
	while (matches = regex.exec(string)) {
		replacements = eval(matches[1]);
		retval = retval.replace(matches[0], randomitem(replacements));
	}

	// recurse
	console.log(message + " => " + retval);
	if (regex.test(retval)) {
		return expand(retval, i+1);
	} else {
		return retval;
	}
}

function thinggen() {
	if (querystring.thing) {
		table = "{{" + querystring.thing + "}}";
	} else {
		table = "{{maintable}}";
	}
	return expand(table, 0) + "<br/>";
}

function parsequery() {
	// This function is anonymous, is executed immediately and 
	// the return value is assigned to QueryString!
	var query_string = {};
	var query = window.location.search.substring(1);
	var vars = query.split("&");
	for (var i=0;i<vars.length;i++) {
		var pair = vars[i].split("=");
		// If first entry with this name
		if (typeof query_string[pair[0]] === "undefined") {
			query_string[pair[0]] = decodeURIComponent(pair[1]);
		// If second entry with this name
		} else if (typeof query_string[pair[0]] === "string") {
			var arr = [ query_string[pair[0]],decodeURIComponent(pair[1]) ];
			query_string[pair[0]] = arr;
		// If third or later entry with this name
		} else {
			query_string[pair[0]].push(decodeURIComponent(pair[1]));
		}
	} 
	return query_string;
}

var querystring = null;
function main() {
	querystring = parsequery();

	var things = document.getElementsByClassName("thing");
	for(var i = 0; i < things.length; i++) {
		console.log("===");
		things.item(i).innerHTML=thinggen();
	}
}

//window.onload = main;
